<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rabbitmq | My Octopress Blog]]></title>
  <link href="http://seletz.github.com/blog/categories/rabbitmq/atom.xml" rel="self"/>
  <link href="http://seletz.github.com/"/>
  <updated>2012-01-20T13:43:52+01:00</updated>
  <id>http://seletz.github.com/</id>
  <author>
    <name><![CDATA[Stefan Eletzhofer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a RabbitMQ test setup with vagrant]]></title>
    <link href="http://seletz.github.com/blog/2012/01/18/creating-a-rabbitmq-test-setup-with-vagrant/"/>
    <updated>2012-01-18T16:00:00+01:00</updated>
    <id>http://seletz.github.com/blog/2012/01/18/creating-a-rabbitmq-test-setup-with-vagrant</id>
    <content type="html"><![CDATA[<p>In this post I'll provide a writeup on how I created a test setup for
a project I'm working on.  The project uses <a href="http://www.rabbitmq.com/" title="RabbitMQ">RabbitMQ</a> to distribute
tasks to a worker, and the production system is a cluster of Apache/Tomcat
machines.</p>

<p>I'll use <a href="http://vagrantup.com/" title="vagrant">vagrant</a> to create two test machines, one which runs <a href="http://www.rabbitmq.com/" title="RabbitMQ">RabbitMQ</a>, the other
one will run the actual worker code.</p>

<!-- more -->


<h2>Preparation</h2>

<p>I'll have the <a href="http://vagrantup.com/" title="vagrant">vagrant</a> files in a subdirectory <code>vagrant</code> in my git repository.  I'll
add the <code>Vagrantfile</code> and all provisioning scriptzs there::</p>

<pre><code>$ mkdir vagrant
</code></pre>

<p>The <code>Vagrantfile</code> looks like this::</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span><a href="http://vagrantup.com/" title="vagrant">vagrant</a>file (Vagrantfile-rabbitmq)</span> <a href='/downloads/code/ruby/Vagrantfile-rabbitmq'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- mode: ruby -*-</span>
</span><span class='line'><span class="c1"># vi: set ft=ruby ts=2 sw=2 expandtab:</span>
</span><span class='line'>
</span><span class='line'><span class="no">Vagrant</span><span class="o">::</span><span class="no">Config</span><span class="o">.</span><span class="n">run</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;ubuntu-natty-64&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="ss">:rabbitmq</span> <span class="k">do</span> <span class="o">|</span><span class="n">rabbit_config</span><span class="o">|</span>
</span><span class='line'>    <span class="c1">#rabbit_config.vm.boot_mode = :gui</span>
</span><span class='line'>    <span class="n">rabbit_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="n">box</span>
</span><span class='line'>    <span class="n">rabbit_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span><span class="p">(</span><span class="s2">&quot;192.168.64.10&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rabbit_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:shell</span><span class="p">,</span> <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s2">&quot;rabbitmq.sh&quot;</span>
</span><span class='line'>    <span class="n">rabbit_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">customize</span> <span class="k">do</span> <span class="o">|</span><span class="n">vm</span><span class="o">|</span>
</span><span class='line'>      <span class="n">vm</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;nexiles - rabbitmq&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="ss">:worker</span> <span class="k">do</span> <span class="o">|</span><span class="n">worker_config</span><span class="o">|</span>
</span><span class='line'>    <span class="n">worker_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="n">box</span>
</span><span class='line'>    <span class="c1">#worker_config.vm.boot_mode = :gui</span>
</span><span class='line'>    <span class="n">worker_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span><span class="p">(</span><span class="s2">&quot;192.168.64.20&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">worker_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:shell</span><span class="p">,</span> <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s2">&quot;worker.sh&quot;</span>
</span><span class='line'>    <span class="n">worker_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">share_folder</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span> <span class="s2">&quot;/src&quot;</span><span class="p">,</span> <span class="s2">&quot;~/develop/nexiles/worker/src&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">worker_config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">customize</span> <span class="k">do</span> <span class="o">|</span><span class="n">vm</span><span class="o">|</span>
</span><span class='line'>      <span class="n">vm</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;nexiles - worker&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The configuration sets the machines up, such that:</p>

<ul>
<li>both have a IP to talk to eachother</li>
<li>on the rabbitmq machine I've used the shell provisioner to install
<a href="http://www.rabbitmq.com/" title="RabbitMQ">RabbitMQ</a> 2.7.1</li>
<li>on the worker machine I've used the shell provisioner to create a python
development environment in /opt</li>
<li>share my source folder on the worker</li>
</ul>


<p>Note: For some reason I wanted to have all the <a href="http://vagrantup.com/" title="vagrant">vagrant</a> stuff in a separate directory.  I
<strong>could</strong> have put the Vagrantfile in the top-level directory and thus saved me the additional
shared folder.  Oh well.</p>

<p>Here are the provisioning shell scripts::</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rabbitmq.sh (vagrant-rabbitmq.sh)</span> <a href='/downloads/code/shell/vagrant-rabbitmq.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat &gt;&gt; /etc/apt/sources.list <span class="s">&lt;&lt;EOT</span>
</span><span class='line'><span class="s">deb http://www.rabbitmq.com/debian/ testing main</span>
</span><span class='line'><span class="s">EOT</span>
</span><span class='line'>
</span><span class='line'>wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
</span><span class='line'>apt-key add rabbitmq-signing-key-public.asc
</span><span class='line'>
</span><span class='line'>apt-get update
</span><span class='line'>
</span><span class='line'>apt-get install -q -y screen htop vim curl wget
</span><span class='line'>apt-get install -q -y rabbitmq-server
</span><span class='line'>
</span><span class='line'><span class="c"># RabbitMQ Plugins</span>
</span><span class='line'>service rabbitmq-server stop
</span><span class='line'>rabbitmq-plugins <span class="nb">enable </span>rabbitmq_management
</span><span class='line'>rabbitmq-plugins <span class="nb">enable </span>rabbitmq_jsonrpc
</span><span class='line'>service rabbitmq-server start
</span><span class='line'>
</span><span class='line'>rabbitmq-plugins list
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">#wget http://www.rabbitmq.com/releases/rabbitmq-server/v2.7.1/rabbitmq-server_2.7.1-1_all.deb</span>
</span><span class='line'><span class="c">#dpkg install rabbitmq-server_2.7.1-1_all.deb</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>worker.sh (vagrant-worker.sh)</span> <a href='/downloads/code/shell/vagrant-worker.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">NX_HOME</span><span class="o">=</span>/opt/nexiles
</span><span class='line'>
</span><span class='line'>apt-get install -q -y screen htop curl wget vim
</span><span class='line'>
</span><span class='line'>mkdir -p <span class="nv">$NX_HOME</span>/<span class="o">{</span>bin,downloads<span class="o">}</span>
</span><span class='line'>cat &gt; /etc/profile.d/nexiles.sh <span class="s">&lt;&lt; EOT</span>
</span><span class='line'><span class="s">export NX_HOME=$NX_HOME</span>
</span><span class='line'><span class="s">test -f &quot;\$NX_HOME/env.sh&quot; &amp;&amp; source \$NX_HOME/env.sh</span>
</span><span class='line'><span class="s">EOT</span>
</span><span class='line'>
</span><span class='line'><span class="c"># python environment</span>
</span><span class='line'>apt-get install -q -y python2.6
</span><span class='line'><span class="nb">cd</span> <span class="nv">$NX_HOME</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PYTHON</span><span class="o">=</span>/usr/bin/python2.6
</span><span class='line'><span class="nb">export </span><span class="nv">PIP</span><span class="o">=</span>/usr/local/bin/pip
</span><span class='line'>curl -s http://peak.telecommunity.com/dist/ez_setup.py &gt; <span class="nv">$NX_HOME</span>/downloads/ez_setup.py
</span><span class='line'><span class="nv">$PYTHON</span> downloads/ez_setup.py -U
</span><span class='line'>
</span><span class='line'>easy_install-2.6 pip
</span><span class='line'><span class="nv">$PIP</span> install virtualenv
</span><span class='line'>
</span><span class='line'>virtualenv -p /usr/bin/python2.6 --clear <span class="nv">$NX_HOME</span>
</span><span class='line'>
</span><span class='line'>. <span class="nv">$NX_HOME</span>/bin/activate
</span><span class='line'>pip install requests
</span><span class='line'>pip install <span class="nv">kombu</span><span class="o">==</span>1.5.1
</span><span class='line'>
</span><span class='line'><span class="c"># fix permissions</span>
</span><span class='line'>chown -R vagrant <span class="nv">$NX_HOME</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Usage</h2>

<p>To use the system I now just need to do a::</p>

<pre><code>$ vagrant up
</code></pre>

<p>And I'm set.</p>
]]></content>
  </entry>
  
</feed>
