<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rabbitmq | My Octopress Blog]]></title>
  <link href="http://seletz.github.com/blog/categories/rabbitmq/atom.xml" rel="self"/>
  <link href="http://seletz.github.com/"/>
  <updated>2012-02-28T09:05:16+01:00</updated>
  <id>http://seletz.github.com/</id>
  <author>
    <name><![CDATA[Stefan Eletzhofer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a RabbitMQ test setup with vagrant]]></title>
    <link href="http://seletz.github.com/blog/2012/01/18/creating-a-rabbitmq-test-setup-with-vagrant/"/>
    <updated>2012-01-18T16:00:00+01:00</updated>
    <id>http://seletz.github.com/blog/2012/01/18/creating-a-rabbitmq-test-setup-with-vagrant</id>
    <content type="html"><![CDATA[<p>In this post I'll provide a writeup on how I created a test setup for
a project I'm working on.  The project uses <a href="http://www.rabbitmq.com/" title="RabbitMQ">RabbitMQ</a> to distribute
tasks to a worker, and the production system is a cluster of Apache/Tomcat
machines.</p>

<p>I'll use <a href="http://vagrantup.com/" title="vagrant">vagrant</a> to create two test machines, one which runs <a href="http://www.rabbitmq.com/" title="RabbitMQ">RabbitMQ</a>, the other
one will run the actual worker code.</p>

<!-- more -->


<h2>Preparation</h2>

<p>I'll have the <a href="http://vagrantup.com/" title="vagrant">vagrant</a> files in a subdirectory <code>vagrant</code> in my git repository.  I'll
add the <code>Vagrantfile</code> and all provisioning scriptzs there::</p>

<pre><code>$ mkdir vagrant
</code></pre>

<p>The <code>Vagrantfile</code> looks like this::</p>

<p>File /Users/seletz/develop/octopress/source/downloads/code/ruby/Vagrantfile-rabbitmq could not be found</p>

<p>The configuration sets the machines up, such that:</p>

<ul>
<li>both have a IP to talk to eachother</li>
<li>on the rabbitmq machine I've used the shell provisioner to install
<a href="http://www.rabbitmq.com/" title="RabbitMQ">RabbitMQ</a> 2.7.1</li>
<li>on the worker machine I've used the shell provisioner to create a python
development environment in /opt</li>
<li>share my source folder on the worker</li>
</ul>


<p>Note: For some reason I wanted to have all the <a href="http://vagrantup.com/" title="vagrant">vagrant</a> stuff in a separate directory.  I
<strong>could</strong> have put the Vagrantfile in the top-level directory and thus saved me the additional
shared folder.  Oh well.</p>

<p>Here are the provisioning shell scripts::</p>

<p>File /Users/seletz/develop/octopress/source/downloads/code/shell/vagrant-rabbitmq.sh could not be found</p>

<p>File /Users/seletz/develop/octopress/source/downloads/code/shell/vagrant-worker.sh could not be found</p>

<h2>Usage</h2>

<p>To use the system I now just need to do a::</p>

<pre><code>$ vagrant up
</code></pre>

<p>And I'm set.</p>
]]></content>
  </entry>
  
</feed>
