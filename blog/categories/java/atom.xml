<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: java | My Octopress Blog]]></title>
  <link href="http://seletz.github.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://seletz.github.com/"/>
  <updated>2012-07-09T11:08:59+02:00</updated>
  <id>http://seletz.github.com/</id>
  <author>
    <name><![CDATA[Stefan Eletzhofer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jython, classpath and virtualenv]]></title>
    <link href="http://seletz.github.com/blog/2012/04/06/jython-classpath-virtualenv/"/>
    <updated>2012-04-06T18:26:00+02:00</updated>
    <id>http://seletz.github.com/blog/2012/04/06/jython-classpath-virtualenv</id>
    <content type="html"><![CDATA[<p>I finally came around to investigate some long standing issues I have
had with my Jython development environment, namely setting up the
<strong>CLASSPATH</strong>.</p>

<!-- more -->


<h2>Background</h2>

<p>I use <em>Jython</em> every day to develop customizations and tools for a big,
enterprise class PLM System.  Working with this system involves setting up and
running Virtual Machines which run a stripped-down installation of the <a href="http://www.ptc.com/product/windchill/pdmlink" title="PLM">PLM</a>
System configured for a specific customer.</p>

<p>I've set up some shared folders and some terminal sessions such that I can
code using my development tools I know and love (Python, VIM and the
Terminal).</p>

<p>To be able to test code I develop, I want the code to run <strong>on my local
machine</strong>, that is, I do <strong>not</strong> want to click-test inside the VM, restart
tomcat and whatnot.  I just want to fire up the python REPL and get going, I
want to insert some PDB breakpoints and develop in an agile fashion.  Test
Driven, even.</p>

<h2>The Problem</h2>

<p>Up until recently, found that I needed to set up the <strong>CLASSPATH</strong> using a
environment variable for all the coding sessions I did.  I created some
wrapper scripts which deduced the correct <strong>CLASSPATH</strong> based on the currently
running VM, the customer project and some further guessing.</p>

<p>This always felt clumsy, but worked, for the most part.</p>

<p>At the same time, I missed the goodness of <em>virtualenv</em>, which I used to love,
which yelled to me something like:</p>

<pre><code>$ virtualenv -p jython foo                                                                                                                                                                ] 6:43 pm
Running virtualenv with interpreter /usr/local/bin/jython
New jython executable in foo/bin/jython
ERROR: The executable foo/bin/jython is not functioning
ERROR: It thinks sys.prefix is u'/usr/local/Cellar/jython/2.5.3b1/libexec' (should be u'/Users/seletz/develop/tmp/foo')
ERROR: virtualenv is not compatible with this system or executable
</code></pre>

<h2>Solution</h2>

<p>Now I need to confess.  I recently started looking at some IDE, because I came
across the need to code some Java for a customer project.  It seems to me,
that coding Java w/o a IDE is a hardcore PITA, thus, is started to look at
<em>NetBeans</em>, <em>Eclipse</em> and <em>IntelliJ</em> (stuff for another post).</p>

<p>While testing testing IDEs I also tried to set them up for Python and Jython
development.  Whatever, I found that I can have a isolated Jython environment
using <em>virtualenv</em> and w/o manually setting the <strong>CLASSPATH</strong>.</p>

<p>The error <em>virtualenv</em> gave me is simply due to the fact that I have
<strong>JYTHON_HOME</strong> set up in my default ... WTF <a href="https://github.com/pypa/virtualenv/issues/185" title="issue">issue</a>?</p>

<p>So, I just need to:</p>

<pre><code>$ cd develop/tmp
$ unset JYTHON_HOME
$ virtualenv -p jython customer_1
</code></pre>

<p>And -- lo and behold -- we have a isolated Jython environment for
<em>customer_1</em>, just like it should be.</p>

<p>Poking further, I noticed that the <em>Jython registry</em> is also local, and, so
is the 'site-packages' directory.  Google found a <a href="http://stackoverflow.com/questions/5839300/defining-a-classpath-for-a-jython-virtual-environment" title="post">post</a> about setting up
the Jython <em>CLASSPATH</em>, and thus I created a 'windchill.pth' file in the
'site-packages' directory:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>windchill.pth (windchill.pth)</span> <a href='/downloads/code/jython/windchill.pth'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/Volumes/wt-vm-ptc/Windchill/lib/servlet.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/lib/CounterPart.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/lib/pjl.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/lib/scmi.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/lib/wnc.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/lib/pdml.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/WtHttpClientAddOns.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/WtJmxClientConn.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/borland.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/commons-collections.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/commons-lang.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/Gantt.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/JClass.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/log4j.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/magelang.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/pvxdriver.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/sfc.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/vecmath.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/xercesImpl.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/xmlParserAPIs.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/xpath.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/JWSUtil.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/pview.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/jviews-chart-all.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/jviews-gantt-all.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/jviews-framework-all.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/lib/mpxj.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/activation.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/ie.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/ie3rdpartylibs.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/ieWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/install.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/mail.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/wc3rdpartylibs.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/wncWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/pdmlWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/pjlWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/PartsLink_L10N.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/jython.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/jdom.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/dom4j-1.5.2.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/Gantt.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/jviews-chart-all.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/jviews-framework-all.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/jviews-gantt-all.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/CounterPartWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/prowtWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/archiveWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/archiveClientWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/archiveServerWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/dpimplWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/InstallUtil.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/dpinfraWeb.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/json_simple-1.1.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/nexiles.tools.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase/WEB-INF/lib/nexiles.settr.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Tomcat/lib/catalina.jar
</span><span class='line'>/Volumes/wt-vm-ptc/Windchill/codebase
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now I can just fire up the Jython interpreter like so:</p>

<pre><code>$ cd develop/tmp/customer_1
$ bin/jython
Jython 2.5.3b1 (2.5:5fa0a5810b25, Feb 22 2012, 12:39:02) 
[Java HotSpot(TM) 64-Bit Server VM (Apple Inc.)] on java1.6.0_31
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; from wt.epm import EPMDocument
&gt;&gt;&gt; 
</code></pre>

<p>For further improvement, I can now locally manage Java dependencies using
<a href="http://pypi.python.org/pypi/jip" title="jip">jip</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[groovy: scripting PDMlink]]></title>
    <link href="http://seletz.github.com/blog/2012/01/08/groovy-scripting-pdmlink/"/>
    <updated>2012-01-08T20:33:00+01:00</updated>
    <id>http://seletz.github.com/blog/2012/01/08/groovy-scripting-pdmlink</id>
    <content type="html"><![CDATA[<p>In this post I'll explore how <code>groovy</code> may be used to script <code>Windchill PDMlink</code>.</p>

<!-- more -->


<h2>Setting up the classpath</h2>

<p>To have acces sto the <code>PDMlink</code> libraries, I'll add a locally mounted <code>codebase</code>
directory to the <code>$CLASSPATH</code>:</p>

<pre><code>$ echo $WT_HOME
/Volumes/settr-vm-ptc/Windchill
$ wtclasspath
export CLASSPATH=:/Volumes/settr-vm-ptc/Windchill/codebas...
$ $(wtclasspath)
</code></pre>

<p>The <code>wtclasspath</code>script looks like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>wtclasspath (wtclasspath)</span> <a href='/downloads/code/shell/wtclasspath'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>setup_classpath<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>	<span class="k">for </span>jar in <span class="k">$(</span>find <span class="nv">$WT_HOME</span>/codebase/WEB-INF -name <span class="s2">&quot;*.jar&quot;</span><span class="k">)</span>; <span class="k">do</span>
</span><span class='line'><span class="k">		</span><span class="nv">cp</span><span class="o">=</span><span class="nv">$cp</span>:<span class="nv">$jar</span>
</span><span class='line'>	<span class="k">done</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>setup_classpath
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;export CLASSPATH=$cp:$WT_HOME/codebase&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Logging In</h2>

<p>To log in, we need to fetch the <code>RemoteMethodServer</code> and set username and password:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>logging in (wt_login.groovy)</span> <a href='/downloads/code/groovy/wt_login.groovy'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">wt.method.RemoteMethodServer</span>
</span><span class='line'>
</span><span class='line'><span class="n">ms</span> <span class="o">=</span> <span class="n">RemoteMethodServer</span><span class="o">.</span><span class="na">getDefault</span><span class="o">()</span>
</span><span class='line'><span class="n">ms</span><span class="o">.</span><span class="na">setUserName</span><span class="o">(</span><span class="s">&quot;orgadmin&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">ms</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&quot;orgadmin&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>After this, we're able to use the <strong>windchill API</strong>.</p>

<h2>Fetching PDMlink Business Objects by Reference</h2>

<p>Fetching a business object using it's <em>Object Reference String</em> translates
also quite well to groovy:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>fetch a object (wt_docinfo.groovy)</span> <a href='/downloads/code/groovy/wt_docinfo.groovy'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">wt.method.RemoteMethodServer</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ptc.wvs.server.util.PublishUtils</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="nf">login</span><span class="o">(</span><span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ms</span> <span class="o">=</span> <span class="n">RemoteMethodServer</span><span class="o">.</span><span class="na">getDefault</span><span class="o">()</span>
</span><span class='line'>    <span class="n">ms</span><span class="o">.</span><span class="na">setUserName</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">user</span><span class="o">)</span>
</span><span class='line'>    <span class="n">ms</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">password</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">ms</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="n">getObjectFromOR</span> <span class="o">=</span> <span class="o">{</span> <span class="n">oid</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">PublishUtils</span><span class="o">.</span><span class="na">getObjectFromRef</span><span class="o">(</span><span class="n">oid</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="n">getORFromObject</span> <span class="o">=</span> <span class="o">{</span> <span class="n">obj</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">PublishUtils</span><span class="o">.</span><span class="na">getRefFromObject</span><span class="o">(</span><span class="n">obj</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// log in</span>
</span><span class='line'><span class="n">login</span><span class="o">(</span><span class="nl">user:</span> <span class="s">&quot;orgadmin&quot;</span><span class="o">,</span> <span class="nl">password:</span> <span class="s">&quot;orgadmin&quot;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// fetch a object by using a OR</span>
</span><span class='line'><span class="n">def</span> <span class="n">oid</span> <span class="o">=</span> <span class="s">&quot;VR:wt.epm.EPMDocument:8483330&quot;</span>
</span><span class='line'><span class="n">def</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">getObjectFromOR</span><span class="o">(</span><span class="n">oid</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// We&#39;re able to access the properties of the EPMDocument</span>
</span><span class='line'><span class="n">println</span> <span class="s">&quot;${doc.displayIdentifier} [${doc.state} ${doc.type}] ${getORFromObject(doc)}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// for the &quot;inspact last&quot; feature of groovyConsole </span>
</span><span class='line'><span class="k">return</span> <span class="n">doc</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Running this script is easy:</p>

<pre><code>$ groovy -cp $CLASSPATH wt_docinfo.groovy
k06__core-coil_cc0000000.asm, -.17 [RELEASED CAD-Dokument] OR:wt.epm.EPMDocument:112511174
</code></pre>

<p>But this is all quite basic, and not using the <strong>groovy</strong> language features very much at all.</p>

<h2>Fetching all iterations of an object</h2>

<p>Now we're going to use the <code>VersionControlHelper</code> service to fetch all iterations of an
object and print some information.  Please note how <strong>groovy</strong> makes it easy to traverse
collections using <code>each</code> and a <em>closure</em>.  Also note the <code>import ... as ...</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>printing iteration history (wt_iterations.groovy)</span> <a href='/downloads/code/groovy/wt_iterations.groovy'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">wt.method.RemoteMethodServer</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.ptc.wvs.server.util.PublishUtils</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">wt.vc.VersionControlHelper</span> <span class="n">as</span> <span class="n">VCH</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="nf">login</span><span class="o">(</span><span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ms</span> <span class="o">=</span> <span class="n">RemoteMethodServer</span><span class="o">.</span><span class="na">getDefault</span><span class="o">()</span>
</span><span class='line'>    <span class="n">ms</span><span class="o">.</span><span class="na">setUserName</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">user</span><span class="o">)</span>
</span><span class='line'>    <span class="n">ms</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">password</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">ms</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="nf">getObjectFromOR</span><span class="o">(</span><span class="n">oid</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PublishUtils</span><span class="o">.</span><span class="na">getObjectFromRef</span><span class="o">(</span><span class="n">oid</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="nf">getORFromObject</span><span class="o">(</span><span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PublishUtils</span><span class="o">.</span><span class="na">getRefFromObject</span><span class="o">(</span><span class="n">obj</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="nf">info</span><span class="o">(</span><span class="n">doc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="s">&quot;${doc.displayIdentifier} [${doc.state} ${doc.type}] ${getORFromObject(doc)}&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// log in</span>
</span><span class='line'><span class="n">login</span><span class="o">(</span><span class="nl">user:</span> <span class="s">&quot;orgadmin&quot;</span><span class="o">,</span> <span class="nl">password:</span> <span class="s">&quot;orgadmin&quot;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// fetch a object by using a OR</span>
</span><span class='line'><span class="n">def</span> <span class="n">oid</span> <span class="o">=</span> <span class="s">&quot;VR:wt.epm.EPMDocument:8483330&quot;</span>
</span><span class='line'><span class="n">def</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">getObjectFromOR</span><span class="o">(</span><span class="n">oid</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">VCH</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">allIterationsOf</span><span class="o">(</span><span class="n">doc</span><span class="o">.</span><span class="na">master</span><span class="o">).</span><span class="na">each</span> <span class="o">{</span> <span class="n">obj</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">println</span> <span class="nf">info</span><span class="o">(</span><span class="n">obj</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The output:</p>

<pre><code>$ groovy -cp $CLASSPATH wt_iterations.groovy
k06__core-coil_cc0000000.asm, -.17 [RELEASED CAD-Dokument] OR:wt.epm.EPMDocument:112511174
k06__core-coil_cc0000000.asm, -.16 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:105876837
k06__core-coil_cc0000000.asm, -.15 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:95189959
k06__core-coil_cc0000000.asm, -.14 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:86656605
k06__core-coil_cc0000000.asm, -.13 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:67720806
k06__core-coil_cc0000000.asm, -.12 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:57847775
k06__core-coil_cc0000000.asm, -.11 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:46825566
k06__core-coil_cc0000000.asm, -.10 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:44606524
k06__core-coil_cc0000000.asm, -.9 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:39832260
k06__core-coil_cc0000000.asm, -.8 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:31441018
k06__core-coil_cc0000000.asm, -.7 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:31417993
k06__core-coil_cc0000000.asm, -.6 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:30833875
k06__core-coil_cc0000000.asm, -.5 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:28909290
k06__core-coil_cc0000000.asm, -.4 [INWORK CAD-Dokument] OR:wt.epm.EPMDocument:11014342
</code></pre>

<p>Cool, eh?  The code <em>almost</em> looks like <strong>coffee script</strong> to me!</p>

<h2>Using the GroovyConsole and the Object Browser</h2>

<p>I'm no big fan of using heavy UIs when programming -- I'm a avid user of <em>MacVIM</em> after all -- but
being able to <em>explore</em> live-objects sounded at least interesting to me.</p>

<p>So, I fired up the <code>groovyConsole</code>:</p>

<pre><code>$ groovyConsole -cp $CLASSPATH wt_docinfo.groovy 
</code></pre>

<p><img class="center" src="http://dl.dropbox.com/u/154097/blog-images/groovy-object-browser.jpg" title="browsing a EPMDocument" alt="groovy object browser"></p>

<h2>Conclusion</h2>

<p>The experiments so far have been promising.  What I want to explore further is:</p>

<ul>
<li>runtime performance compared to <strong>jython</strong></li>
<li>importing <strong>groovy</strong> classes in java (should be a no-brainer)</li>
<li>creating a servlet using <strong>groovy</strong>, using <code>Groovy Server Pages</code></li>
<li>all of the above together in the <strong>Windchill</strong> context</li>
<li>doing a side-by-side comparsion of <strong>jython</strong> and <strong>groovy</strong> code</li>
</ul>

]]></content>
  </entry>
  
</feed>
